{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handler","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","res","json","this","filteredMonster","filter","mon","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0TAGaA,EAAO,SAAAC,GAChB,OAAO,sBAAKC,UAAU,iBAAf,UACK,qBAAKC,IAAK,wBAAwBF,EAAMG,QAAQC,GAAG,yBAA0BC,IAAI,YACjF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCHrBC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACDD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAK,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCH/CO,G,YAAY,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,QACpC,OAAQ,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgCzEG,E,kDA9Bb,aAAc,IAAD,8BACX,gBAcFC,aAAe,SAACC,GAAO,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbzD,EAAKC,MAAQ,CACXpB,QAAS,GACTiB,YAAa,IAJJ,E,qDAQb,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACJ,EAAKP,SAAS,CAAChB,QAASuB,S,oBAK5B,WACE,MAA+BE,KAAKL,MAA7BpB,EAAP,EAAOA,QAASiB,EAAhB,EAAgBA,YACVS,EAAkB1B,EAAQ2B,QAAO,SAAAC,GAAG,OAAIA,EAAIzB,KAAK0B,cAAcC,SAASb,EAAYY,kBAC1F,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,QAASe,KAAKX,eACvD,cAAC,EAAD,CAAUR,SAAUoB,W,GAzBVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.45bed741.chunk.js","sourcesContent":["import React  from \"react\";\r\nimport \"./card.style.css\"\r\n\r\nexport const Card = props => {\r\n    return <div className=\"card-container\">\r\n                <img src={\"https://robohash.org/\"+props.monster.id+\"?set=set2&size=180x180\"} alt=\"monster\" />\r\n                <h2>{props.monster.name}</h2>\r\n                <p>{props.monster.email}</p>\r\n            </div>\r\n}","import React from \"react\";\r\nimport \"./card-list.style.css\"\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = props =>{\r\n    return <div className=\"card-list\">\r\n        { props.monsters.map(monster => (<Card key={monster.id} monster={monster}/>)) }\r\n    </div>\r\n}","import react from \"react\";\r\nimport \"./search-box.style.css\"\r\n\r\nexport const SearchBox = ({placeholder, handler}) => {\r\n    return (<input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handler} />)\r\n}","import React,{ Component } from 'react';\nimport {CardList} from \"./components/card-list/card-list.component.jsx\"\nimport './App.css';\nimport {SearchBox} from \"./components/search-box/search-box.component.jsx\"\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      monster: [],\n      searchField: ''\n    }\n  }\n \n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json())\n    .then(res => {\n      this.setState({monster: res})})\n  }\n\n  handleChange = (e) => {this.setState({searchField:e.target.value})}\n\n  render() {\n    const {monster, searchField} = this.state;\n    const filteredMonster = monster.filter(mon => mon.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handler={this.handleChange}/>\n        <CardList monsters={filteredMonster}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}